{"ast":null,"code":"import { Renderer2 } from '@angular/core';\nimport { Theme } from 'src/app/core/theme.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/theme.service\";\nimport * as i2 from \"src/app/auth/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/button\";\n\nfunction HeaderComponent_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 5);\n    i0.ɵɵtext(1, \"Login\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HeaderComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function HeaderComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.logout());\n    });\n    i0.ɵɵtext(1, \"Logout\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let HeaderComponent = /*#__PURE__*/(() => {\n  class HeaderComponent {\n    constructor(renderer, themeService, auth) {\n      this.renderer = renderer;\n      this.themeService = themeService;\n      this.auth = auth;\n      this.currentTheme = Theme.LIGHT;\n      this.currentThemeIcon = 'icon-moon';\n      this.user = null;\n      this.pageTitle = '';\n    }\n\n    ngOnInit() {\n      this.initialiseTheme();\n      this.auth.user$.subscribe(user => {\n        this.user = user;\n      });\n    }\n\n    initialiseTheme() {\n      this.currentTheme = this.themeService.getCurrentTheme();\n\n      if (this.currentTheme === Theme.LIGHT) {\n        this.currentThemeIcon = 'icon-moon';\n      }\n\n      if (this.currentTheme === Theme.DARK) {\n        this.currentThemeIcon = 'icon-sun';\n        this.renderer.addClass(document.body, 'dark-theme');\n      }\n    }\n\n    changeTheme() {\n      if (this.currentTheme === Theme.LIGHT) {\n        this.themeService.setThemeToStorage(Theme.DARK);\n        this.currentTheme = Theme.DARK;\n        this.currentThemeIcon = 'icon-sun';\n        this.renderer.addClass(document.body, 'dark-theme');\n      } else {\n        this.themeService.setThemeToStorage(Theme.LIGHT);\n        this.currentTheme = Theme.LIGHT;\n        this.currentThemeIcon = 'icon-moon';\n        this.renderer.removeClass(document.body, 'dark-theme');\n      }\n    }\n\n    logout() {\n      this.auth.signout();\n    }\n\n  }\n\n  HeaderComponent.ɵfac = function HeaderComponent_Factory(t) {\n    return new (t || HeaderComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.ThemeService), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n\n  HeaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HeaderComponent,\n    selectors: [[\"app-header\"]],\n    inputs: {\n      pageTitle: \"pageTitle\"\n    },\n    decls: 9,\n    vars: 4,\n    consts: [[\"mat-flat-button\", \"\", \"routerLink\", \"/login\", 4, \"ngIf\"], [\"mat-flat-button\", \"\", 3, \"click\", 4, \"ngIf\"], [1, \"page-header-container\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Change Theme\", 3, \"click\"], [1, \"icon-theme\", 3, \"svgIcon\"], [\"mat-flat-button\", \"\", \"routerLink\", \"/login\"], [\"mat-flat-button\", \"\", 3, \"click\"]],\n    template: function HeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\")(1, \"nav\");\n        i0.ɵɵtemplate(2, HeaderComponent_a_2_Template, 2, 0, \"a\", 0);\n        i0.ɵɵtemplate(3, HeaderComponent_button_3_Template, 2, 0, \"button\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"h2\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function HeaderComponent_Template_button_click_7_listener() {\n          return ctx.changeTheme();\n        });\n        i0.ɵɵelement(8, \"mat-icon\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.user);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.user);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.pageTitle);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"svgIcon\", ctx.currentThemeIcon);\n      }\n    },\n    dependencies: [i3.NgIf, i4.RouterLinkWithHref, i5.MatIcon, i6.MatButton, i6.MatAnchor],\n    styles: [\".page-header-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;margin:2rem 0}.page-header-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{letter-spacing:10px;font-size:30px;font-weight:700;color:#fff;text-transform:uppercase;font-family:Montserrat-bold,sans-serif}nav[_ngcontent-%COMP%]{display:flex;justify-content:right}mat-icon[_ngcontent-%COMP%]{height:30px}nav.a[_ngcontent-%COMP%], nav.button[_ngcontent-%COMP%]{height:auto;border-radius:22px;box-shadow:0 2px 4px #0003;transition:box-shadow .3s ease,transform .3s ease;padding:.3em 1em;font-family:Montserrat-medium,sans-serif}nav[_ngcontent-%COMP%]:hover{background-color:#f2f2f2;box-shadow:0 4px 8px #0000004d;transform:translateY(-2px);color:#000}\"]\n  });\n  return HeaderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}