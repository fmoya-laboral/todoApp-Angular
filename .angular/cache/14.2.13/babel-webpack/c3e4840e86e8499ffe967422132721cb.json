{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"src/app/auth/auth.service\";\nimport * as i3 from \"@angular/cdk/layout\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/radio\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/list\";\nimport * as i10 from \"../add-todo/add-todo.component\";\n\nfunction DashboardComponent_mat_list_3_mat_list_item_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"mat-icon\", 11);\n    i0.ɵɵelementStart(2, \"span\", 12);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r4.title);\n  }\n}\n\nfunction DashboardComponent_mat_list_3_mat_list_item_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 13);\n    i0.ɵɵlistener(\"change\", function DashboardComponent_mat_list_3_mat_list_item_1_ng_template_2_Template_mat_radio_button_change_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const item_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.setAsCompleted(item_r4));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"checked\", item_r4.isCompleted)(\"disabled\", item_r4.isCompleted);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r4.title, \" \");\n  }\n}\n\nfunction DashboardComponent_mat_list_3_mat_list_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-item\", 6);\n    i0.ɵɵtemplate(1, DashboardComponent_mat_list_3_mat_list_item_1_ng_container_1_Template, 4, 1, \"ng-container\", 7);\n    i0.ɵɵtemplate(2, DashboardComponent_mat_list_3_mat_list_item_1_ng_template_2_Template, 2, 3, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(4, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_mat_list_3_mat_list_item_1_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const item_r4 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.deleteTodo(item_r4));\n    });\n    i0.ɵɵelement(5, \"mat-icon\", 10);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n\n    const _r6 = i0.ɵɵreference(3);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r4.isCompleted)(\"ngIfElse\", _r6);\n  }\n}\n\nfunction DashboardComponent_mat_list_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list\", 4);\n    i0.ɵɵtemplate(1, DashboardComponent_mat_list_3_mat_list_item_1_Template, 6, 2, \"mat-list-item\", 5);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx_r0.filteredTodos$));\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"active-filter\": a0\n  };\n};\n\nfunction DashboardComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_7_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.setFilterState(ctx_r15.FilterState.ALL));\n    });\n    i0.ɵɵtext(2, \"Todos\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_7_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.setFilterState(ctx_r17.FilterState.ACTIVE));\n    });\n    i0.ɵɵtext(4, \"Activos\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_7_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.setFilterState(ctx_r18.FilterState.COMPLETED));\n    });\n    i0.ɵɵtext(6, \"Completados\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx_r1.isFilterActive(ctx_r1.FilterState.ALL)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx_r1.isFilterActive(ctx_r1.FilterState.ACTIVE)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r1.isFilterActive(ctx_r1.FilterState.COMPLETED)));\n  }\n}\n\nfunction DashboardComponent_mat_card_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-content\")(2, \"div\", 16)(3, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_mat_card_10_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.setFilterState(ctx_r19.FilterState.ALL));\n    });\n    i0.ɵɵtext(4, \"Todos\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_mat_card_10_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.setFilterState(ctx_r21.FilterState.ACTIVE));\n    });\n    i0.ɵɵtext(6, \"Activos\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_mat_card_10_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.setFilterState(ctx_r22.FilterState.COMPLETED));\n    });\n    i0.ɵɵtext(8, \"Completados\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx_r2.isFilterActive(ctx_r2.FilterState.ALL)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx_r2.isFilterActive(ctx_r2.FilterState.ACTIVE)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r2.isFilterActive(ctx_r2.FilterState.COMPLETED)));\n  }\n}\n\nvar FilterState = /*#__PURE__*/(() => {\n  (function (FilterState) {\n    FilterState[\"ALL\"] = \"All\";\n    FilterState[\"ACTIVE\"] = \"Active\";\n    FilterState[\"COMPLETED\"] = \"Completed\";\n  })(FilterState || (FilterState = {}));\n\n  return FilterState;\n})();\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(firestore, auth, breakpointObserver) {\n      this.firestore = firestore;\n      this.auth = auth;\n      this.breakpointObserver = breakpointObserver;\n      this.totalActiveTodos = 0;\n      this.user = null;\n      this.FilterState = FilterState;\n      this.activeFilter = new BehaviorSubject(FilterState.ALL);\n      this.isSmallScreen = false;\n      this.auth.user$.subscribe(user => {\n        if (user) {\n          this.user = user;\n          this.items$ = firestore.collection('todos', ref => ref.where('userId', '==', user.uid)).valueChanges({\n            idField: 'id'\n          });\n          this.items$.pipe(map(items => items.filter(item => !item.isCompleted).length)).subscribe(totalActiveTodos => {\n            this.totalActiveTodos = totalActiveTodos;\n          });\n          this.getTodos();\n        }\n      });\n      this.isSmallScreen = breakpointObserver.isMatched('(max-width: 375px)');\n    }\n\n    isFilterActive(filterState) {\n      return this.activeFilter.getValue() === filterState;\n    }\n\n    getTodos() {\n      if (!this.items$) {\n        return;\n      }\n\n      this.filteredTodos$ = combineLatest(this.items$, this.activeFilter).pipe(map(([todos, currentFilter]) => {\n        if (currentFilter === FilterState.ALL) {\n          return todos;\n        }\n\n        return todos.filter(todo => {\n          const filterCondition = currentFilter === FilterState.COMPLETED ? true : false;\n          return todo.isCompleted === filterCondition;\n        });\n      }));\n    }\n\n    setFilterState(filterState) {\n      this.activeFilter.next(filterState);\n    }\n\n    clearCompleted() {\n      if (this.user && this.items$) {\n        this.firestore.collection('todos', ref => {\n          var _a;\n\n          return ref.where('userId', '==', (_a = this.user) === null || _a === void 0 ? void 0 : _a.uid).where('isCompleted', '==', true);\n        }).get().pipe(map(qs => {\n          return qs.docs;\n        })).subscribe(docs => {\n          docs.forEach(doc => {\n            doc.ref.delete();\n          });\n        });\n      }\n    }\n\n    setAsCompleted(todo) {\n      const todoDoc = this.firestore.doc(`todos/${todo.id}`);\n      todoDoc.update({\n        isCompleted: true\n      });\n    }\n\n    deleteTodo(todo) {\n      const todoDoc = this.firestore.doc(`todos/${todo.id}`);\n      todoDoc.delete();\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.BreakpointObserver));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 11,\n    vars: 4,\n    consts: [[\"role\", \"list\", 4, \"ngIf\"], [\"class\", \"filter-container\", 4, \"ngIf\"], [\"mat-flat-button\", \"\", 1, \"clear\", 3, \"click\"], [4, \"ngIf\"], [\"role\", \"list\"], [\"role\", \"listitem\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"listitem\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Deleting Todo\", 1, \"delete-todo-btn\", 3, \"click\"], [\"svgIcon\", \"icon-cross\", 1, \"icon-cross\"], [\"svgIcon\", \"icon-check\", 1, \"icon-check\"], [1, \"completed\"], [3, \"checked\", \"disabled\", \"change\"], [1, \"filter-container\"], [\"mat-flat-button\", \"\", 3, \"ngClass\", \"click\"], [1, \"filter-container\", \"filter-container--mobile\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-add-todo\");\n        i0.ɵɵelementStart(1, \"mat-card\")(2, \"mat-card-content\");\n        i0.ɵɵtemplate(3, DashboardComponent_mat_list_3_Template, 3, 3, \"mat-list\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-footer\")(5, \"span\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, DashboardComponent_div_7_Template, 7, 9, \"div\", 1);\n        i0.ɵɵelementStart(8, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_8_listener() {\n          return ctx.clearCompleted();\n        });\n        i0.ɵɵtext(9, \"Clear Completed\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(10, DashboardComponent_mat_card_10_Template, 9, 9, \"mat-card\", 3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.filteredTodos$);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", ctx.totalActiveTodos, \" items left\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isSmallScreen);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSmallScreen);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i5.MatCard, i5.MatCardContent, i5.MatCardFooter, i6.MatRadioButton, i7.MatIcon, i8.MatButton, i9.MatList, i9.MatListItem, i10.AddTodoComponent, i4.AsyncPipe],\n    styles: [\"mat-card[_ngcontent-%COMP%]{margin-top:.5rem;padding:0;font-family:Montserrat-regular,sans-serif}span.completed[_ngcontent-%COMP%]{text-decoration:line-through;padding-left:6px}mat-list-item[_ngcontent-%COMP%]{position:relative;font-family:Montserrat-regular,sans-serif;border-bottom:1px solid #dfdfdf}mat-list-item[_ngcontent-%COMP%]   .delete-todo-btn[_ngcontent-%COMP%]{display:none;position:absolute;right:0}mat-list-item[_ngcontent-%COMP%]:hover   .delete-todo-btn[_ngcontent-%COMP%]{display:inline}mat-flat-button[_ngcontent-%COMP%], mat-card-footer[_ngcontent-%COMP%], mat-card-content[_ngcontent-%COMP%], mat-radio-button[_ngcontent-%COMP%], .clear[_ngcontent-%COMP%]{font-family:Montserrat-regular,sans-serif}mat-card-footer[_ngcontent-%COMP%]{font-family:Montserrat-regular,sans-serif;display:flex;justify-content:space-between;align-items:center;margin-left:10px;margin-right:10px}@media screen and (max-width: 375px){mat-card-footer[_ngcontent-%COMP%]{margin-right:0}}.filter-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{font-family:Montserrat-regular,sans-serif;padding:0 2px}.filter-container[_ngcontent-%COMP%]   button.active-filter[_ngcontent-%COMP%]{color:#0b00ff}.filter-container.filter-container--mobile[_ngcontent-%COMP%]{margin-top:1rem}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}